---

- name: GRAFANA | Check main datasource
  uri:
    url: "http://127.0.0.1:{{ grafana_port }}/api/datasources/1"
    method: GET
    headers:
      Accept: application/json
      Content-Type: application/json
    force_basic_auth: yes
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    body: "{{ lookup('template', 'templates/datasource.json.j2')}}"
    body_format: json
  register: datasource_check
  failed_when: false
  when: grafana_service_state in ['started', 'restarted', 'reloaded']

- name: GRAFANA | Import datasource
  uri:
    url: "http://127.0.0.1:{{ grafana_port }}/api/datasources"
    method: POST
    headers:
      Accept: application/json
      Content-Type: application/json
    force_basic_auth: yes
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    body: "{{ lookup('template', 'templates/datasource.json.j2')}}"
    body_format: json
    response: 200
  when:
    - datasource_check.status != 200
    - grafana_service_state in ['started', 'restarted', 'reloaded']
  register: importDatasource
  retries: 10
  delay: 1
  until: ( importDatasource.status == 200)

- name: GRAFANA | Import stats dashboard
  uri:
    url: "http://127.0.0.1:{{ grafana_port }}/api/dashboards/db"
    method: POST
    headers:
      Accept: application/json
      Content-Type: application/json
    force_basic_auth: yes
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    body: "{{ lookup('template', 'templates/dashboards/prometheus_stats.json.j2')}}"
    body_format: json
    response: 200
  when:
    - grafana_datasource_type == 'prometheus'
    - grafana_service_state == 'started'

- name: GRAFANA | Set Organisation
  uri:
    url: "http://{{ ansible_nodename }}:{{ grafana_port }}/api/orgs/1"
    method: PUT
    headers:
      Accept: application/json
      Content-Type: application/json
    force_basic_auth: yes
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    body: "{{ lookup('template', 'templates/organisation.json.j2')}}"
    body_format: json
    response: 200
  when:
    - grafana_organisation is defined
    - grafana_service_state == 'started'
